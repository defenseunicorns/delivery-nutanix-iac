#cloud-config
hostname: ${hostname}.local
prefer_fqdn_over_hostname: false
users:
  - name: era
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    passwd: ${user_password}
    shell: /bin/bash
    ssh_authorized_keys:
    %{ for key in authorized_keys ~}
    - ${key}
    %{ endfor ~}
ssh_pwauth: True
runcmd:
  - |
    sudo pvcreate /dev/sdb
    sudo pvs
    sudo vgcreate pg_data_vg /dev/sdb
    sudo vgs
    sudo lvcreate -L 49.99G -n pg_data_lv pg_data_vg
    sudo lvscan
    sudo mkfs.ext4 /dev/pg_data_vg/pg_data_lv
    sudo mkdir -p /var/lib/pgsql/
    # Mount postgres default data location to second drive. This is required by NDB
    sudo mount /dev/pg_data_vg/pg_data_lv /var/lib/pgsql/
    echo '/dev/pg_data_vg/pg_data_lv  /pgsql/postgres/data  ext4  defaults 0 0' | sudo  tee -a /etc/fstab
    sudo mkdir -p /var/lib/pgsql/${postgres_version}/data/
    # Copy postgres default service to the location that NDB writes the era_postgres service. This ensures it is overwritten by NDB VMs which avoids multiple PG services running at once
    sudo cp /usr/lib/systemd/system/postgresql-${postgres_version}.service /etc/systemd/system/era_postgres.service
    # Ensure postgres user owns data dir
    sudo chown -R postgres:postgres /var/lib/pgsql/
    # Init and start PG service
    sudo /usr/pgsql-${postgres_version}/bin/postgresql-${postgres_version}-setup initdb
    sudo systemctl enable era_postgres
    # Update pg_hba.conf to match what NDB uses
    sed -E -i 's/local(\s+)all(\s+)all(\s+)peer/local\1all\2all\3trust/' /var/lib/pgsql/14/data/pg_hba.conf
    sed -E -i 's/local(\s+)replication(\s+)all(\s+)peer/local\1replication\2all\3scram-sha-256/' /var/lib/pgsql/14/data/pg_hba.conf
    echo "host all all 0.0.0.0/0 scram-sha-256" | sudo tee -a /var/lib/pgsql/14/data/pg_hba.conf
    echo "listen_addresses = '*'" | sudo tee -a /var/lib/pgsql/14/data/postgresql.conf
    sudo systemctl start era_postgres
    psql -U postgres -c "ALTER USER postgres PASSWORD '${pg_password}'"
    sudo firewall-cmd --zone=public --add-service=postgresql
    sudo firewall-cmd --zone=public --permanent --add-service=postgresql
